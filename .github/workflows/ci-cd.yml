- name: Deploy to EC2
  uses: appleboy/ssh-action@master
  with:
    host: ${{ secrets.EC2_HOST }}
    username: ec2-user
    key: ${{ secrets.EC2_SSH_KEY }}
    script: |
      cd ~/note.me
      git pull
      
      # Create environment variable files
      echo "REACT_APP_API_URL=http://${{ secrets.EC2_HOST }}:5000" > ./client/.env
      echo "PORT=5000" > ./server/.env
      echo "MONGO_URI=mongodb://mongo:27017/noteme" >> ./server/.env
      echo "CORS_ORIGIN=http://${{ secrets.EC2_HOST }}:3000" >> ./server/.env
      echo "NODE_ENV=production" >> ./server/.env
      
      # Create a docker-compose file directly with the correct username
      cat > docker-compose.prod.yml << 'EOL'
      version: '3'
      
      services:
        client:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/noteme-client:latest
          ports:
            - "3000:80"
          restart: always
      
        server:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/noteme-server:latest
          ports:
            - "5000:5000"
          restart: always
          env_file:
            - ./server/.env
          depends_on:
            - mongo
      
        mongo:
          image: mongo:latest
          volumes:
            - mongo-data:/data/db
          restart: always
      
        prometheus:
          image: prom/prometheus:latest
          volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
          ports:
            - "9090:9090"
          restart: always
      
        grafana:
          image: grafana/grafana:latest
          ports:
            - "3001:3000"
          restart: always
          depends_on:
            - prometheus
      
      volumes:
        mongo-data:
      EOL
      
      # Restart the containers
      docker-compose -f docker-compose.prod.yml down
      docker-compose -f docker-compose.prod.yml up -d